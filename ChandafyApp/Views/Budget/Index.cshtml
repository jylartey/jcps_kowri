@model IEnumerable<ChandafyApp.Models.Budget>
@using System.Globalization

@{
    ViewData["Title"] = "My Budget";
    var activeFiscalYear = ViewBag.ActiveFiscalYear as FiscalYear;
}

<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex justify-content-between align-items-center">
        <h6 class="m-0 font-weight-bold text-white">My Budget Overview

            @if (activeFiscalYear != null)
            {
                <span class="badge bg-success ms-2">@activeFiscalYear.Period</span>
            }
        </h6>
        @* Add a button for creating individual budget entries or other actions if needed *@
        <button type="button" class="btn btn-main btn-sm" data-bs-toggle="modal" data-bs-target="#createBudgetModal">
            <i class="bi bi-plus-circle"></i> Add Budget Entry
        </button>
    </div>
    <div class="card-body">

        @* <div class="alert alert-info" role="alert">
                No budget entries found for your account.
                @if (User.IsInRole("ItAdmin") || User.IsInRole("Admin") || User.IsInRole("Regional") || User.IsInRole("Muhtamim"))
                {
                    <span>You can <a asp-action="Upload">upload budgets</a> from an Excel file.</span>
                }
            </div> *@

        <div class="table-responsive">
            <table class="table table-striped table-hover" id="budgetDataTable" width="100%" cellspacing="0">
                <thead class="bg-main text-white">
                    <tr>
                        <th>Chanda Type</th>
                        <th>Fiscal Year</th>
                        <th>Month</th>
                        <th>Budgeted Amount</th>
                        <th>Amount Paid</th>
                        <th>Balance Due</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.ChandaType?.Name</td>
                            <td>@item.FiscalYear?.Period</td>
                            <td>
                                @* Convert month number to month name *@
                                @(new DateTime(item.Year, item.Month, 1).ToString("MMMM", CultureInfo.InvariantCulture))
                            </td>
                            <td>@item.Amount.ToString("C")</td>
                            <td>@item.AmountPaid.ToString("C")</td>
                            <td>@((item.Amount - item.AmountPaid).ToString("C"))</td>
                            <td>
                                <div class="btn-group" role="group">
                                    <button type="button" class="btn btn-outline-info btn-sm edit-budget-btn"
                                            data-id="@item.Id" data-bs-toggle="modal" data-bs-target="#editBudgetModal">
                                        <i class="bi bi-pencil"></i> Edit
                                    </button>
                                    <button type="button" class="btn btn-outline-danger btn-sm delete-budget-btn"
                                            data-id="@item.Id" data-bs-toggle="modal" data-bs-target="#deleteBudgetModal">
                                        <i class="bi bi-trash"></i> Delete
                                    </button>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

    </div>
</div>
<div class="modal fade" id="createBudgetModal" tabindex="-1" aria-labelledby="createBudgetModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-main text-white">
                <h5 class="modal-title" id="createBudgetModalLabel">Add New Budget Entry</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="createBudgetForm" asp-action="Create" method="post">
                <div class="modal-body">
                    <div class="alert alert-danger d-none" id="createBudgetErrorAlert" role="alert"></div>

                    <div class="mb-3">
                        <label for="createMemberId" class="form-label">Member</label>
                        <select id="createMemberId" name="UserId" class="form-control" required>
                            <option value="">-- Select Member --</option>
                            @foreach (var member in ViewBag.Members)
                            {
                                <option value="@member.Id">@member.FirstName @member.LastName (@member.AIMS)</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="createChandaTypeId" class="form-label">Chanda Type</label>
                        <select id="createChandaTypeId" name="ChandaTypeId" class="form-control" required>
                            <option value="">-- Select Chanda Type --</option>
                            @foreach (var chandaType in ViewBag.ChandaTypes)
                            {
                                <option value="@chandaType.Id">@chandaType.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="createFiscalYearId" class="form-label">Fiscal Year</label>
                        <select id="createFiscalYearId" name="FiscalYearId" class="form-control" required>
                            @foreach (var fy in ViewBag.FiscalYears)
                            {
                                <option value="@fy.Id">@fy.Period</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="createMonth" class="form-label">Month</label>
                        <select id="createMonth" name="Month" class="form-control" required>
                            <option value="">-- Select Month --</option>
                            @for (int i = 1; i <= 12; i++)
                            {
                                <option value="@i">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="createAmount" class="form-label">Budgeted Amount</label>
                        <input type="number" step="0.01" id="createAmount" name="Amount" class="form-control" required />
                    </div>
                    @* Hidden fields for Year and AmountPaid will be set by JS or Controller *@
                    <input type="hidden" id="createYear" name="Year" value="@(ViewBag.ActiveFiscalYear?.StartDate.Year ?? DateTime.Now.Year)" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-main">Add Budget</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="editBudgetModal" tabindex="-1" aria-labelledby="editBudgetModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-main text-white">
                <h5 class="modal-title" id="editBudgetModalLabel">Edit Budget Entry</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="editBudgetForm" asp-action="Edit" method="post">
                <div class="modal-body">
                    <div class="alert alert-danger d-none" id="editBudgetErrorAlert" role="alert"></div>
                    <input type="hidden" id="editId" name="Id" />
                    <div class="mb-3">
                        <label for="editMemberId" class="form-label">Member</label>
                        <select id="editMemberId" name="UserId" class="form-control" required>
                            <option value="">-- Select Member --</option>
                            @foreach (var member in ViewBag.Members)
                            {
                                <option value="@member.Id">@member.FirstName @member.LastName (@member.AIMS)</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editChandaTypeId" class="form-label">Chanda Type</label>
                        <select id="editChandaTypeId" name="ChandaTypeId" class="form-control" required>
                            <option value="">-- Select Chanda Type --</option>
                            @foreach (var chandaType in ViewBag.ChandaTypes)
                            {
                                <option value="@chandaType.Id">@chandaType.Name</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editFiscalYearId" class="form-label">Fiscal Year</label>
                        <select id="editFiscalYearId" name="FiscalYearId" class="form-control" required>
                            @foreach (var fy in ViewBag.FiscalYears)
                            {
                                <option value="@fy.Id">@fy.Period</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editMonth" class="form-label">Month</label>
                        <select id="editMonth" name="Month" class="form-control" required>
                            <option value="">-- Select Month --</option>
                            @for (int i = 1; i <= 12; i++)
                            {
                                <option value="@i">@CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(i)</option>
                            }
                        </select>
                    </div>
                    <div class="mb-3">
                        <label for="editAmount" class="form-label">Budgeted Amount</label>
                        <input type="number" step="0.01" id="editAmount" name="Amount" class="form-control" required />
                    </div>
                    <div class="mb-3">
                        <label for="editAmountPaid" class="form-label">Amount Paid</label>
                        <input type="number" step="0.01" id="editAmountPaid" name="AmountPaid" class="form-control" required />
                    </div>
                    <input type="hidden" id="editYear" name="Year" /> @* Year will be set from FiscalYear selection or fetched *@
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-main">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteBudgetModal" tabindex="-1" aria-labelledby="deleteBudgetModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-danger text-white">
                <h5 class="modal-title" id="deleteBudgetModalLabel">Confirm Delete Budget Entry</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form id="deleteBudgetForm" asp-action="Delete" method="post">
                <div class="modal-body">
                    <div class="alert alert-danger d-none" id="deleteBudgetErrorAlert" role="alert"></div>
                    <input type="hidden" id="deleteBudgetId" name="id" />
                    <p>Are you sure you want to delete this budget entry?</p>
                    <div class="alert alert-warning">
                        <strong>Warning:</strong> This action cannot be undone.
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-danger">Delete</button>
                </div>
            </form>
        </div>
    </div>
</div>


@section Styles {
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/lib/datatables/css/dataTables.bootstrap5.min.css" />
    <link rel="stylesheet" href="~/lib/datatables/css/jquery.dataTables.min.css" />
    <link rel="stylesheet" href="~/lib/font-awesome/css/all.min.css" />
    <link rel="stylesheet" href="~/lib/bootstrap-icons/bootstrap-icons.css" />

    <style>
        :root {
            --primary-color: #4A90E2; /* A vibrant blue, softer than the default Bootstrap primary */
            --primary-dark: #357ABD;
            --secondary-color: #5C7B8E; /* A muted blue-grey */
            --accent-color: #F5A623; /* A warm orange for highlights */
            --success-color: #7ED321;
            --danger-color: #D0021B;
            --info-color: #50E3C2; /* A refreshing teal */
            --light-bg: #F9FBFD; /* Very light blue-grey for backgrounds */
            --dark-text: #333333;
            --light-text: #ffffff;
            --border-color: #e0e0e0;
            --secondary-dark: #566c75; /* Manually calculated darker shade of #6c757d */
            --danger-dark: #B90017;
            --header-dark-bg-start: #2C3E50; /* Deep Navy Blue */
            --header-dark-bg-end: #1F2C3A;
        }

        body {
            background-color: var(--light-bg);
            color: var(--dark-text);
        }

        .card {
            border: none;
            border-radius: 12px;
            box-shadow: 0 6px 20px rgba(0, 0, 0, 0.08);
            transition: all 0.3s ease;
        }

            .card:hover {
                box-shadow: 0 8px 25px rgba(0, 0, 0, 0.12);
            }

        .card-header {
            background: linear-gradient(135deg, var(--header-dark-bg-start) 0%, var(--header-dark-bg-end) 100%); 
            color: var(--light-text);
            border-bottom: none;
            border-radius: 12px 12px 0 0 !important;
            padding: 1.25rem 1.5rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .h6.font-weight-bold {
            font-weight: 700 !important;
        }

        /* Main Buttons (e.g., Add New Expense) */
        .btn-main {
            background-color: var(--accent-color);
            border-color: var(--accent-color);
            color: var(--light-text);
            padding: 0.5rem 1rem;
            border-radius: 8px;
            font-weight: 600;
            transition: all 0.3s ease;
        }

            .btn-main:hover {
                background-color: darken(var(--accent-color), 10%);
                border-color: darken(var(--accent-color), 10%);
                transform: translateY(-2px);
                box-shadow: 0 4px 10px rgba(var(--accent-color), 0.4);
            }

        /* Table Styling */
        .table-responsive {
            overflow-x: auto;
        }

        #budgetDataTable {
            width: 100%;
            border-collapse: collapse;
            margin-top: 1rem;
        }

            #budgetDataTable th {
                background-color: var(--header-dark-bg-start);
                color: var(--light-text);
                font-weight: 600;
                padding: 0.75rem 1rem;
                border-bottom: 2px solid var(--header-dark-bg-end);
                text-align: left;
            }

            #budgetDataTable tbody tr:nth-child(even) {
                background-color: var(--light-bg); /* Lighter shade for even rows */
            }

            #budgetDataTable tbody tr:nth-child(odd) {
                background-color: #ffffff; /* White for odd rows */
            }

            #budgetDataTable tbody tr:hover {
                background-color: rgba(var(--primary-color), 0.1); /* Slight highlight on hover */
                cursor: pointer;
            }

            #budgetDataTable td {
                padding: 0.75rem 1rem;
                border-bottom: 1px solid var(--border-color);
            }

        /* Action Buttons in Table */
        .btn-group .btn {
            border-radius: 6px;
            margin-right: 0.35rem;
            padding: 0.4rem 0.75rem;
            font-size: 0.875rem;
            transition: all 0.2s ease;
        }

        .btn-outline-info {
            color: var(--info-color);
            border-color: var(--info-color);
        }

            .btn-outline-info:hover {
                background-color: var(--info-color);
                color: var(--light-text);
            }

        .btn-outline-danger {
            color: var(--danger-color);
            border-color: var(--danger-color);
        }

            .btn-outline-danger:hover {
                background-color: var(--danger-color);
                color: var(--light-text);
            }

        /* Modal Styling - common for all views */
        .modal-content {
            border: none;
            border-radius: 12px;
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
        }

        .modal-header {
            background: linear-gradient(135deg, var(--header-dark-bg-start) 0%, var(--header-dark-bg-end) 100%);
            color: var(--light-text);
            border-bottom: none;
            border-radius: 12px 12px 0 0;
            padding: 1.2rem 1.5rem;
        }

            .modal-header.bg-danger {
                background: linear-gradient(135deg, var(--danger-color) 0%, var(--danger-dark) 100%) !important;
            }
        .modal-title {
            font-weight: 600;
            color: var(--light-text);
        }

        .btn-close-white {
            filter: brightness(0) invert(1);
        }

        .modal-body {
            padding: 1.5rem;
        }

        .form-group label {
            font-weight: 500;
            margin-bottom: 0.5rem;
            color: var(--secondary-color);
        }

        .form-control {
            border-radius: 8px;
            padding: 0.75rem 1rem;
            border: 1px solid var(--border-color);
            transition: border-color 0.2s ease, box-shadow 0.2s ease;
        }

            .form-control:focus {
                border-color: var(--primary-color);
                box-shadow: 0 0 0 0.25rem rgba(var(--primary-color), 0.25);
            }

        .modal-footer {
            border-top: 1px solid var(--border-color);
            padding: 1rem 1.5rem;
            background-color: #f8f9fa;
            border-radius: 0 0 12px 12px;
        }

        .btn-secondary {
            background-color: #6c757d;
            border-color: #6c757d;
            color: var(--light-text);
            border-radius: 8px;
            transition: all 0.2s ease;
        }

            .btn-secondary:hover {
                background-color: var(--secondary-dark);
                border-color: var(--secondary-dark);
            }

        .btn-danger {
            background-color: var(--danger-color);
            border-color: var(--danger-color);
            color: var(--light-text);
            border-radius: 8px;
            transition: all 0.2s ease;
        }

            .btn-danger:hover {
                background-color: var(--danger-dark);
                border-color: var(--danger-dark);
            }

        .alert-info {
            background-color: rgba(var(--info-color), 0.1);
            border-color: rgba(var(--info-color), 0.2);
            color: #0c5460;
            border-radius: 8px;
            padding: 1rem;
            font-size: 0.9rem;
        }

        .alert-warning {
            background-color: rgba(var(--accent-color), 0.1);
            border-color: rgba(var(--accent-color), 0.2);
            color: #856404; /* Darker text for warning */
            border-radius: 8px;
            padding: 1rem;
            font-size: 0.9rem;
        }
    </style>
}

@section Scripts {
    <script src="~/lib/datatables/js/jquery.dataTables.min.js"></script>
    <script src="~/lib/datatables/js/dataTables.bootstrap5.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#budgetDataTable').DataTable({
                // You can add DataTables options here
            });
        // Function to show error message in modal
                    function showModalError(modalId, message) {
                        $(modalId + 'ErrorAlert').removeClass('d-none').html(message);
                    }

                    // Function to hide error message in modal
                    function hideModalError(modalId) {
                        $(modalId + 'ErrorAlert').addClass('d-none').html('');
                    }

                    // Common AJAX form submission handler
                    function submitBudgetForm(formId, modalId) {
                        const form = $(formId);
                        hideModalError(modalId); // Clear previous errors

                        $.ajax({
                            url: form.attr('action'),
                            type: 'POST',
                            data: form.serialize(), // Includes Anti-Forgery Token from @Html.AntiForgeryToken()
                            success: function (response) {
                                if (response.success) {
                                    $(modalId).modal('hide');
                                    alert(response.message || "Operation successful!");
                                    window.location.reload(); // Reload the page to show updated data
                                } else {
                                    let errorMessage = response.message || 'An error occurred.';
                                    if (response.errors && response.errors.length > 0) {
                                        errorMessage += '<br>' + response.errors.join('<br>');
                                    }
                                    showModalError(modalId, errorMessage);
                                }
                            },
                            error: function (xhr, status, error) {
                                let errorMessage = 'An unexpected error occurred. Please try again.';
                                if (xhr.responseJSON && xhr.responseJSON.message) {
                                    errorMessage = xhr.responseJSON.message;
                                }
                                showModalError(modalId, errorMessage);
                            }
                        });
                    }

                    // CREATE Budget Form Submission
                    $('#createBudgetForm').submit(function (e) {
                        e.preventDefault();
                        submitBudgetForm('#createBudgetForm', '#createBudgetModal');
                    });

                    // Populate Edit Budget Modal
                    $('.edit-budget-btn').click(function () {
                        var budgetId = $(this).data('id');
                        hideModalError('#editBudgetModal'); // Clear previous errors

                        $.get('@Url.Action("Edit", "Budget")/' + budgetId, function (data) {
                            $('#editId').val(data.id);
                            $('#editMemberId').val(data.userId);
                            $('#editChandaTypeId').val(data.chandaTypeId);
                            $('#editFiscalYearId').val(data.fiscalYearId);
                            $('#editMonth').val(data.month);
                            $('#editYear').val(data.year); // Set the year from fetched data
                            $('#editAmount').val(data.amount);
                            $('#editAmountPaid').val(data.amountPaid);
                        }).fail(function (xhr) {
                            let errorMessage = 'Error loading budget data.';
                            if (xhr.responseJSON && xhr.responseJSON.message) {
                                errorMessage = xhr.responseJSON.message;
                            }
                            showModalError('#editBudgetModal', errorMessage);
                        });
                    });

                    // EDIT Budget Form Submission
                    $('#editBudgetForm').submit(function (e) {
                        e.preventDefault();
                        submitBudgetForm('#editBudgetForm', '#editBudgetModal');
                    });

                    // Populate Delete Budget Modal
                    $('.delete-budget-btn').click(function () {
                        var budgetId = $(this).data('id');
                        $('#deleteBudgetId').val(budgetId);
                        hideModalError('#deleteBudgetModal'); // Clear previous errors
                    });

                    // DELETE Budget Form Submission
                    $('#deleteBudgetForm').submit(function (e) {
                        e.preventDefault();
                        submitBudgetForm('#deleteBudgetForm', '#deleteBudgetModal');
                    });

                    // Update hidden 'Year' field in Create/Edit modals based on FiscalYear selection
                    
                });
    </script>
}